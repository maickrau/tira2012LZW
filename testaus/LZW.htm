<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<title>Lempel–Ziv–Welch - Wikipedia, the free encyclopedia</title>
<meta charset="UTF-8" />
<meta name="generator" content="MediaWiki 1.20wmf11" />
<link rel="canonical" href="/wiki/Lempel%E2%80%93Ziv%E2%80%93Welch" />
<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Lempel%E2%80%93Ziv%E2%80%93Welch&amp;action=edit" />
<link rel="edit" title="Edit this page" href="/w/index.php?title=Lempel%E2%80%93Ziv%E2%80%93Welch&amp;action=edit" />
<link rel="apple-touch-icon" href="//en.wikipedia.org/apple-touch-icon.png" />
<link rel="shortcut icon" href="/favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
<link rel="EditURI" type="application/rsd+xml" href="//en.wikipedia.org/w/api.php?action=rsd" />
<link rel="copyright" href="//creativecommons.org/licenses/by-sa/3.0/" />
<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="stylesheet" href="//bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=ext.gadget.ReferenceTooltips%2Cteahouse%7Cext.wikihiero%7Cmediawiki.legacy.commonPrint%2Cshared%7Cskins.vector&amp;only=styles&amp;skin=vector&amp;*" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="//bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=vector&amp;*" />
<style>a:lang(ar),a:lang(ckb),a:lang(fa),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}

/* cache key: enwiki:resourceloader:filter:minify-css:7:8d95de22da3b74bdc8517ef8752d1bee */
</style>

<script src="//bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Lempel–Ziv–Welch","wgTitle":"Lempel–Ziv–Welch","wgCurRevisionId":506664890,"wgArticleId":75854,"wgIsArticle":true,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["All articles with unsourced statements","Articles with unsourced statements from March 2012","Lossless compression algorithms","Articles with example pseudocode"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Lempel–Ziv–Welch","wgRestrictionEdit":[],"wgRestrictionMove":[],"wgSearchNamespaces":[0],"wgRedirectedFrom":"LZW","wgVectorEnabledModules":{"collapsiblenav":true,"collapsibletabs":true,"editwarning":true,"expandablesearch":false,"footercleanup":false,"sectioneditlinks":false,"simplesearch":true,"experiments":true},"wgWikiEditorEnabledModules":{"toolbar":true,"dialogs":true,"hidesig":true,"templateEditor":false,"templates":false,"preview":false,"previewDialog":false,"publish":false,"toc":false},"wgTrackingToken":"639c8c6ee17dcf029e1178b61122e26d","wgArticleFeedbackv5Permissions":{"aft-reader":true,"aft-member":false,"aft-editor":false,"aft-monitor":false,"aft-administrator":false,"aft-oversighter":false},"wikilove-recipient":"","wikilove-anon":0,"mbEmailEnabled":true,"mbUserEmail":false,"mbIsEmailConfirmationPending":false,"wgFlaggedRevsParams":{"tags":{"status":{"levels":1,"quality":2,"pristine":3}}},"wgStableRevisionId":null,"wgCategoryTreePageCategoryOptions":"{\"mode\":0,\"hideprefix\":20,\"showcount\":true,\"namespaces\":false}","Geo":{"city":"","country":""},"wgNoticeProject":"wikipedia","aftv5Article":{"id":75854,"title":"Lempel–Ziv–Welch","namespace":0,"categories":["All articles with unsourced statements","Articles with example pseudocode","Articles with unsourced statements from March 2012","Lossless compression algorithms"],"permissionLevel":"aft-reader"}});
}</script><script>if(window.mw){
mw.loader.implement("user.options",function(){mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"externaldiff":0,"externaleditor":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"imagesize":2,"justify":0,"math":0,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"quickbar":5,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":false,"showjumplinks":1,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"vector","stubthreshold":0,"thumbsize":4,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":1,"watchdefault":0,"watchdeletion":0,"watchlistdays":3
,"watchlisthideanons":0,"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"flaggedrevssimpleui":1,"flaggedrevsstable":0,"flaggedrevseditdiffs":true,"flaggedrevsviewdiffs":false,"vector-simplesearch":1,"useeditwarning":1,"vector-collapsiblenav":1,"usebetatoolbar":1,"usebetatoolbar-cgd":1,"wikilove-enabled":1,"variant":"en","language":"en","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false,"searchNs100":false,"searchNs101":false,"searchNs108":false,"searchNs109":false,"gadget-teahouse":1,"gadget-ReferenceTooltips":1,"gadget-DRN-wizard":1,"gadget-mySandbox":1});;},{},{});mw.loader.implement("user.tokens",function(){mw.user.tokens.set({"editToken":"+\\",
"watchToken":false});;},{},{});

/* cache key: enwiki:resourceloader:filter:minify-js:7:81f7c0502e347822f14be81f96ff03ab */
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.page.startup","mediawiki.legacy.wikibits","mediawiki.legacy.ajax","ext.wikimediaShopLink.core","ext.centralNotice.bannerController"]);
}</script>
<script src="//bits.wikimedia.org/geoiplookup"></script><!--[if lt IE 7]><style type="text/css">body{behavior:url("/w/skins-1.20wmf11/vector/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Lempel–Ziv–Welch skin-vector action-view vector-animateLayout">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<!-- content -->
		<div id="content" class="mw-body">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<!-- sitenotice -->
			<div id="siteNotice"><!-- CentralNotice --><script>mw.centralNotice.initialize();</script></div>
			<!-- /sitenotice -->
						<!-- firstHeading -->
			<h1 id="firstHeading" class="firstHeading"><span dir="auto">Lempel–Ziv–Welch</span></h1>
			<!-- /firstHeading -->
			<!-- bodyContent -->
			<div id="bodyContent">
								<!-- tagline -->
				<div id="siteSub">From Wikipedia, the free encyclopedia</div>
				<!-- /tagline -->
								<!-- subtitle -->
				<div id="contentSub">  (Redirected from <a href="/w/index.php?title=LZW&amp;redirect=no" title="LZW">LZW</a>)</div>
				<!-- /subtitle -->
																<!-- jumpto -->
				<div id="jump-to-nav" class="mw-jump">
					Jump to:					<a href="#mw-head">navigation</a>, 					<a href="#p-search">search</a>
				</div>
				<!-- /jumpto -->
								<!-- bodycontent -->
				<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><div style="display:none;" class="pef-notification-container gratitude">
	<div class="pef-notification">
		<div class="pef-icon pef-icon-checkmark">&nbsp;</div>
		<span></span>
	</div>
</div>
<div style="display:none;" class="pef-notification-container historical">
	<div class="pef-notification">
		<div class="pef-icon pef-icon-checkmark">&#160;</div>
		<span></span>
	</div>
</div><p><b>Lempel–Ziv–Welch (LZW)</b> is a universal <a href="/wiki/Lossless_data_compression" title="Lossless data compression" class="mw-redirect">lossless data compression</a> <a href="/wiki/Algorithm" title="Algorithm">algorithm</a> created by <a href="/wiki/Abraham_Lempel" title="Abraham Lempel">Abraham Lempel</a>, <a href="/wiki/Jacob_Ziv" title="Jacob Ziv">Jacob Ziv</a>, and <a href="/wiki/Terry_Welch" title="Terry Welch">Terry Welch</a>. It was published by Welch in 1984 as an improved implementation of the <a href="/wiki/LZ77_and_LZ78" title="LZ77 and LZ78">LZ78</a> algorithm published by Lempel and Ziv in 1978. The algorithm is simple to implement, and has the potential for very high throughput in hardware implementations.<sup id="cite_ref-WelchIEEE_0-0" class="reference"><a href="#cite_note-WelchIEEE-0"><span>[</span>1<span>]</span></a></sup></p>
<table id="toc" class="toc">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Algorithm"><span class="tocnumber">1</span> <span class="toctext">Algorithm</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="#Encoding"><span class="tocnumber">1.1</span> <span class="toctext">Encoding</span></a></li>
<li class="toclevel-2 tocsection-3"><a href="#Decoding"><span class="tocnumber">1.2</span> <span class="toctext">Decoding</span></a></li>
<li class="toclevel-2 tocsection-4"><a href="#Variable-width_codes"><span class="tocnumber">1.3</span> <span class="toctext">Variable-width codes</span></a></li>
<li class="toclevel-2 tocsection-5"><a href="#Packing_order"><span class="tocnumber">1.4</span> <span class="toctext">Packing order</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-6"><a href="#Example"><span class="tocnumber">2</span> <span class="toctext">Example</span></a>
<ul>
<li class="toclevel-2 tocsection-7"><a href="#Encoding_2"><span class="tocnumber">2.1</span> <span class="toctext">Encoding</span></a></li>
<li class="toclevel-2 tocsection-8"><a href="#Decoding_2"><span class="tocnumber">2.2</span> <span class="toctext">Decoding</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-9"><a href="#Further_coding"><span class="tocnumber">3</span> <span class="toctext">Further coding</span></a></li>
<li class="toclevel-1 tocsection-10"><a href="#Uses"><span class="tocnumber">4</span> <span class="toctext">Uses</span></a></li>
<li class="toclevel-1 tocsection-11"><a href="#Patents"><span class="tocnumber">5</span> <span class="toctext">Patents</span></a></li>
<li class="toclevel-1 tocsection-12"><a href="#Variants"><span class="tocnumber">6</span> <span class="toctext">Variants</span></a></li>
<li class="toclevel-1 tocsection-13"><a href="#See_also"><span class="tocnumber">7</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1 tocsection-14"><a href="#References"><span class="tocnumber">8</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1 tocsection-15"><a href="#External_links"><span class="tocnumber">9</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<h2><span class="editsection">[<a href="/w/index.php?title=Lempel%E2%80%93Ziv%E2%80%93Welch&amp;action=edit&amp;section=1" title="Edit section: Algorithm">edit</a>]</span> <span class="mw-headline" id="Algorithm">Algorithm</span></h2>
<p>The scenario described by Welch's 1984 paper<sup id="cite_ref-WelchIEEE_0-1" class="reference"><a href="#cite_note-WelchIEEE-0"><span>[</span>1<span>]</span></a></sup> encodes sequences of 8-bit data as fixed-length 12-bit codes. The codes from 0 to 255 represent 1-character sequences consisting of the corresponding 8-bit character, and the codes 256 through 4095 are created in a dictionary for sequences encountered in the data as it is encoded. At each stage in compression, input bytes are gathered into a sequence until the next character would make a sequence for which there is no code yet in the dictionary. The code for the sequence (without that character) is emitted, and a new code (for the sequence with that character) is added to the dictionary.</p>
<p>The idea was quickly adapted to other situations. In an image based on a color table, for example, the natural character alphabet is the set of color table indexes, and in the 1980s, many images had small color tables (on the order of 16 colors). For such a reduced alphabet, the full 12-bit codes yielded poor compression unless the image was large, so the idea of a <b>variable-width</b> code was introduced: codes typically start one bit wider than the symbols being encoded, and as each code size is used up, the code width increases by 1 bit, up to some prescribed maximum (typically 12 bits).</p>
<p>Further refinements include reserving a code to indicate that the code table should be cleared (a "clear code", typically the first value immediately after the values for the individual alphabet characters), and a code to indicate the end of data (a "stop code", typically one greater than the clear code). The clear code allows the table to be reinitialized after it fills up, which lets the encoding adapt to changing patterns in the input data. Smart encoders can monitor the compression efficiency and clear the table whenever the existing table no longer matches the input well.</p>
<p>Since the codes are added in a manner determined by the data, the decoder mimics building the table as it sees the resulting codes. It is critical that the encoder and decoder agree on which variety of LZW is being used: the size of the alphabet, the maximum code width, whether variable-width encoding is being used, the initial code size, whether to use the clear and stop codes (and what values they have). Most formats that employ LZW build this information into the format specification or provide explicit fields for them in a compression header for the data.</p>
<h3><span class="editsection">[<a href="/w/index.php?title=Lempel%E2%80%93Ziv%E2%80%93Welch&amp;action=edit&amp;section=2" title="Edit section: Encoding">edit</a>]</span> <span class="mw-headline" id="Encoding">Encoding</span></h3>
<p>A high level view of the encoding algorithm is shown here:</p>
<ol>
<li>Initialize the dictionary to contain all strings of length one.</li>
<li>Find the longest string W in the dictionary that matches the current input.</li>
<li>Emit the dictionary index for W to output and remove W from the input.</li>
<li>Add W followed by the next symbol in the input to the dictionary.</li>
<li>Go to Step 2.</li>
</ol>
<p>A dictionary is initialized to contain the single-character strings corresponding to all the possible input characters (and nothing else except the clear and stop codes if they're being used). The algorithm works by scanning through the input string for successively longer substrings until it finds one that is not in the dictionary. When such a string is found, the index for the string less the last character (i.e., the longest substring that <i>is</i> in the dictionary) is retrieved from the dictionary and sent to output, and the new string (including the last character) is added to the dictionary with the next available code. The last input character is then used as the next starting point to scan for substrings.</p>
<p>In this way, successively longer strings are registered in the dictionary and made available for subsequent encoding as single output values. The algorithm works best on data with repeated patterns, so the initial parts of a message will see little compression. As the message grows, however, the <a href="/wiki/Data_compression_ratio" title="Data compression ratio">compression ratio</a> tends asymptotically to the maximum.<sup id="cite_ref-1" class="reference"><a href="#cite_note-1"><span>[</span>2<span>]</span></a></sup></p>
<h3><span class="editsection">[<a href="/w/index.php?title=Lempel%E2%80%93Ziv%E2%80%93Welch&amp;action=edit&amp;section=3" title="Edit section: Decoding">edit</a>]</span> <span class="mw-headline" id="Decoding">Decoding</span></h3>
<p>The decoding algorithm works by reading a value from the encoded input and outputting the corresponding string from the initialized dictionary. At the same time it obtains the next value from the input, and adds to the dictionary the <a href="/wiki/Concatenation" title="Concatenation">concatenation</a> of the string just output and the first character of the string obtained by decoding the next input value. The decoder then proceeds to the next input value (which was already read in as the "next value" in the previous pass) and repeats the process until there is no more input, at which point the final input value is decoded without any more additions to the dictionary.</p>
<p>In this way the decoder builds up a dictionary which is identical to that used by the encoder, and uses it to decode subsequent input values. Thus the full dictionary does not need be sent with the encoded data; just the initial dictionary containing the single-character strings is sufficient (and is typically defined beforehand within the encoder and decoder rather than being explicitly sent with the encoded data.)</p>
<h3><span class="editsection">[<a href="/w/index.php?title=Lempel%E2%80%93Ziv%E2%80%93Welch&amp;action=edit&amp;section=4" title="Edit section: Variable-width codes">edit</a>]</span> <span class="mw-headline" id="Variable-width_codes">Variable-width codes</span></h3>
<p>If variable-width codes are being used, the encoder and decoder must be careful to change the width at the same points in the encoded data, or they will disagree about where the boundaries between individual codes fall in the stream. In the standard version, the encoder increases the width from p to p&#160;+&#160;1 when a sequence ω&#160;+&#160;s is encountered that is not in the table (so that a code must be added for it) but the next available code in the table is 2<sup>p</sup> (the first code requiring p&#160;+&#160;1 bits). The encoder emits the code for ω at width p (since that code does not require p&#160;+&#160;1 bits), and then increases the code width so that the next code emitted will be p&#160;+&#160;1 bits wide.</p>
<p>The decoder is always one code behind the encoder in building the table, so when it sees the code for ω, it will generate an entry for code 2<sup>p</sup>&#160;−&#160;1. Since this is the point where the encoder will increase the code width, the decoder must increase the width here as well: at the point where it generates the largest code that will fit in p bits.</p>
<p>Unfortunately some early implementations of the encoding algorithm increase the code width and <i>then</i> emit ω at the new width instead of the old width, so that to the decoder it looks like the width changes one code too early. This is called "Early Change"; it caused so much confusion that Adobe now allows both versions in PDF files, but includes an explicit flag in the header of each LZW-compressed stream to indicate whether Early Change is being used. Most graphic file formats do not use Early Change.</p>
<p>When the table is cleared in response to a clear code, both encoder and decoder change the code width after the clear code back to the initial code width, starting with the code immediately following the clear code.</p>
<h3><span class="editsection">[<a href="/w/index.php?title=Lempel%E2%80%93Ziv%E2%80%93Welch&amp;action=edit&amp;section=5" title="Edit section: Packing order">edit</a>]</span> <span class="mw-headline" id="Packing_order">Packing order</span></h3>
<p>Since the codes emitted typically do not fall on byte boundaries, the encoder and decoder must agree on how codes are packed into bytes. The two common methods are <i>LSB-First</i> ("Least Significant Bit First") and <i>MSB-First</i> ("Most Significant Bit First"). In LSB-First packing, the first code is aligned so that the least significant bit of the code falls in the least significant bit of the first stream byte, and if the code has more than 8 bits, the high order bits left over are aligned with the least significant bits of the next byte; further codes are packed with LSB going into the least significant bit not yet used in the current stream byte, proceeding into further bytes as necessary. MSB-first packing aligns the first code so that its <i>most</i> significant bit falls in the MSB of the first stream byte, with overflow aligned with the MSB of the next byte; further codes are written with MSB going into the most significant bit not yet used in the current stream byte.</p>
<p>GIF files use LSB-First packing order. TIFF files and PDF files use MSB-First packing order.</p>
<h2><span class="editsection">[<a href="/w/index.php?title=Lempel%E2%80%93Ziv%E2%80%93Welch&amp;action=edit&amp;section=6" title="Edit section: Example">edit</a>]</span> <span class="mw-headline" id="Example">Example</span></h2>
<p>The following example illustrates the LZW algorithm in action, showing the status of the output and the <a href="/wiki/Dictionary_coder" title="Dictionary coder">dictionary</a> at every stage, both in encoding and decoding the data. This example has been constructed to give reasonable compression on a very short message. In real text data, repetition is generally less pronounced, so longer input streams are typically necessary before the compression builds up efficiency.</p>
<p>The plaintext to be encoded (from an alphabet using only the capital letters) is:</p>
<pre>
TOBEORNOTTOBEORTOBEORNOT#
</pre>
<p>The <b>#</b> is a marker used to show that the end of the message has been reached. There are thus 26 symbols in the plaintext alphabet (the 26 capital letters <i>A</i> through <i>Z</i>), plus the stop code <i>#</i>. We arbitrarily assign these the values 1 through 26 for the letters, and 0 for '#'. (Most flavors of LZW would put the stop code <i>after</i> the data alphabet, but nothing in the basic algorithm requires that. The encoder and decoder only have to agree what value it has.)</p>
<p>A computer will render these as strings of <a href="/wiki/Bit" title="Bit">bits</a>. Five-bit codes are needed to give sufficient combinations to encompass this set of 27 values. The dictionary is initialized with these 27 values. As the dictionary grows, the codes will need to grow in width to accommodate the additional entries. A 5-bit code gives 2<sup>5</sup> = 32 possible combinations of bits, so when the 33rd dictionary word is created, the algorithm will have to switch at that point from 5-bit strings to 6-bit strings (for <i>all</i> code values, including those which were previously output with only five bits). Note that since the all-zero code 00000 is used, and is labeled "0", the 33rd dictionary entry will be labeled <b>32</b>. (Previously generated output is not affected by the code-width change, but once a 6-bit value is generated in the dictionary, it could conceivably be the next code emitted, so the width for subsequent output shifts to 6 bits to accommodate that.)</p>
<p>The initial dictionary, then, will consist of the following entries:</p>
<table class="wikitable" style="text-align: right; margin-left: auto; margin-right: auto;">
<tr>
<th>Symbol</th>
<th>Binary</th>
<th>Decimal</th>
</tr>
<tr>
<td>#</td>
<td>00000</td>
<td>0</td>
</tr>
<tr>
<td>A</td>
<td>00001</td>
<td>1</td>
</tr>
<tr>
<td>B</td>
<td>00010</td>
<td>2</td>
</tr>
<tr>
<td>C</td>
<td>00011</td>
<td>3</td>
</tr>
<tr>
<td>D</td>
<td>00100</td>
<td>4</td>
</tr>
<tr>
<td>E</td>
<td>00101</td>
<td>5</td>
</tr>
<tr>
<td>F</td>
<td>00110</td>
<td>6</td>
</tr>
<tr>
<td>G</td>
<td>00111</td>
<td>7</td>
</tr>
<tr>
<td>H</td>
<td>01000</td>
<td>8</td>
</tr>
<tr>
<td>I</td>
<td>01001</td>
<td>9</td>
</tr>
<tr>
<td>J</td>
<td>01010</td>
<td>10</td>
</tr>
<tr>
<td>K</td>
<td>01011</td>
<td>11</td>
</tr>
<tr>
<td>L</td>
<td>01100</td>
<td>12</td>
</tr>
<tr>
<td>M</td>
<td>01101</td>
<td>13</td>
</tr>
<tr>
<td>N</td>
<td>01110</td>
<td>14</td>
</tr>
<tr>
<td>O</td>
<td>01111</td>
<td>15</td>
</tr>
<tr>
<td>P</td>
<td>10000</td>
<td>16</td>
</tr>
<tr>
<td>Q</td>
<td>10001</td>
<td>17</td>
</tr>
<tr>
<td>R</td>
<td>10010</td>
<td>18</td>
</tr>
<tr>
<td>S</td>
<td>10011</td>
<td>19</td>
</tr>
<tr>
<td>T</td>
<td>10100</td>
<td>20</td>
</tr>
<tr>
<td>U</td>
<td>10101</td>
<td>21</td>
</tr>
<tr>
<td>V</td>
<td>10110</td>
<td>22</td>
</tr>
<tr>
<td>W</td>
<td>10111</td>
<td>23</td>
</tr>
<tr>
<td>X</td>
<td>11000</td>
<td>24</td>
</tr>
<tr>
<td>Y</td>
<td>11001</td>
<td>25</td>
</tr>
<tr>
<td>Z</td>
<td>11010</td>
<td>26</td>
</tr>
</table>
<h3><span class="editsection">[<a href="/w/index.php?title=Lempel%E2%80%93Ziv%E2%80%93Welch&amp;action=edit&amp;section=7" title="Edit section: Encoding">edit</a>]</span> <span class="mw-headline" id="Encoding_2">Encoding</span></h3>
<p>Buffer input characters in a sequence ω until ω + next character is not in the dictionary. Emit the code for ω, and add ω + next character to the dictionary. Start buffering again with the next character.</p>
<table class="wikitable" style="text-align: right; margin-left: auto; margin-right: auto;">
<tr>
<th scope="col" rowspan="2" style="width: 6em;">Current Sequence</th>
<th scope="col" rowspan="2" style="width: 4em;">Next Char</th>
<th colspan="2">Output</th>
<th scope="col" rowspan="2" colspan="2" style="width: 7em;">Extended Dictionary</th>
<th rowspan="2">Comments</th>
</tr>
<tr>
<th>Code</th>
<th>Bits</th>
</tr>
<tr>
<td style="text-align: center;">NULL</td>
<td style="text-align: center;">T</td>
<td></td>
<td></td>
<td style="border-right: none;"></td>
<td style="border-left: none;"></td>
<td></td>
</tr>
<tr>
<td style="text-align: center;">T</td>
<td style="text-align: center;">O</td>
<td>20</td>
<td>10100</td>
<td style="border-right: none;">27:</td>
<td style="border-left: none;">TO</td>
<td style="text-align: left;">27 = first available code after 0 through 26</td>
</tr>
<tr>
<td style="text-align: center;">O</td>
<td style="text-align: center;">B</td>
<td>15</td>
<td>01111</td>
<td style="border-right: none;">28:</td>
<td style="border-left: none;">OB</td>
<td></td>
</tr>
<tr>
<td style="text-align: center;">B</td>
<td style="text-align: center;">E</td>
<td>2</td>
<td>00010</td>
<td style="border-right: none;">29:</td>
<td style="border-left: none;">BE</td>
<td></td>
</tr>
<tr>
<td style="text-align: center;">E</td>
<td style="text-align: center;">O</td>
<td>5</td>
<td>00101</td>
<td style="border-right: none;">30:</td>
<td style="border-left: none;">EO</td>
<td></td>
</tr>
<tr>
<td style="text-align: center;">O</td>
<td style="text-align: center;">R</td>
<td>15</td>
<td>01111</td>
<td style="border-right: none;">31:</td>
<td style="border-left: none;">OR</td>
<td></td>
</tr>
<tr>
<td style="text-align: center;">R</td>
<td style="text-align: center;">N</td>
<td>18</td>
<td>10010</td>
<td style="border-right: none;">32:</td>
<td style="border-left: none;">RN</td>
<td style="text-align: left;">32 requires 6 bits, so for next output use 6 bits</td>
</tr>
<tr>
<td style="text-align: center;">N</td>
<td style="text-align: center;">O</td>
<td>14</td>
<td>001110</td>
<td style="border-right: none;">33:</td>
<td style="border-left: none;">NO</td>
<td></td>
</tr>
<tr>
<td style="text-align: center;">O</td>
<td style="text-align: center;">T</td>
<td>15</td>
<td>001111</td>
<td style="border-right: none;">34:</td>
<td style="border-left: none;">OT</td>
<td></td>
</tr>
<tr>
<td style="text-align: center;">T</td>
<td style="text-align: center;">T</td>
<td>20</td>
<td>010100</td>
<td style="border-right: none;">35:</td>
<td style="border-left: none;">TT</td>
<td></td>
</tr>
<tr>
<td style="text-align: center;">TO</td>
<td style="text-align: center;">B</td>
<td>27</td>
<td>011011</td>
<td style="border-right: none;">36:</td>
<td style="border-left: none;">TOB</td>
<td></td>
</tr>
<tr>
<td style="text-align: center;">BE</td>
<td style="text-align: center;">O</td>
<td>29</td>
<td>011101</td>
<td style="border-right: none;">37:</td>
<td style="border-left: none;">BEO</td>
<td></td>
</tr>
<tr>
<td style="text-align: center;">OR</td>
<td style="text-align: center;">T</td>
<td>31</td>
<td>011111</td>
<td style="border-right: none;">38:</td>
<td style="border-left: none;">ORT</td>
<td></td>
</tr>
<tr>
<td style="text-align: center;">TOB</td>
<td style="text-align: center;">E</td>
<td>36</td>
<td>100100</td>
<td style="border-right: none;">39:</td>
<td style="border-left: none;">TOBE</td>
<td></td>
</tr>
<tr>
<td style="text-align: center;">EO</td>
<td style="text-align: center;">R</td>
<td>30</td>
<td>011110</td>
<td style="border-right: none;">40:</td>
<td style="border-left: none;">EOR</td>
<td></td>
</tr>
<tr>
<td style="text-align: center;">RN</td>
<td style="text-align: center;">O</td>
<td>32</td>
<td>100000</td>
<td style="border-right: none;">41:</td>
<td style="border-left: none;">RNO</td>
<td></td>
</tr>
<tr>
<td style="text-align: center;">OT</td>
<td style="text-align: center;">#</td>
<td>34</td>
<td>100010</td>
<td style="border-right: none;"></td>
<td style="border-left: none;"></td>
<td style="text-align: left;"># stops the algorithm; send the cur seq</td>
</tr>
<tr>
<td></td>
<td></td>
<td>0</td>
<td>000000</td>
<td style="border-right: none;"></td>
<td style="border-left: none;"></td>
<td style="text-align: left;">and the stop code</td>
</tr>
</table>
<p>Unencoded length = 25 symbols × 5 bits/symbol = 125 bits<br />
Encoded length = (6 codes × 5 bits/code) + (11 codes × 6 bits/code) = 96 bits.</p>
<p>Using LZW has saved 29 bits out of 125, reducing the message by almost 22%. If the message were longer, then the dictionary words would begin to represent longer and longer sections of text, allowing repeated words to be sent very compactly.</p>
<h3><span class="editsection">[<a href="/w/index.php?title=Lempel%E2%80%93Ziv%E2%80%93Welch&amp;action=edit&amp;section=8" title="Edit section: Decoding">edit</a>]</span> <span class="mw-headline" id="Decoding_2">Decoding</span></h3>
<p>To decode an LZW-compressed archive, one needs to know in advance the initial dictionary used, but additional entries can be reconstructed as they are always simply <a href="/wiki/Concatenation" title="Concatenation">concatenations</a> of previous entries.</p>
<table class="wikitable" style="text-align: right; margin-left: auto; margin-right: auto;">
<tr>
<th colspan="2">Input</th>
<th scope="col" rowspan="2" style="width: 6em;">Output Sequence</th>
<th colspan="4">New Dictionary Entry</th>
<th rowspan="2">Comments</th>
</tr>
<tr>
<th>Bits</th>
<th>Code</th>
<th scope="col" colspan="2" style="width: 6em;">Full</th>
<th scope="col" colspan="2" style="width: 6em;">Conjecture</th>
</tr>
<tr>
<td>10100</td>
<td>20</td>
<td style="text-align: center;">T</td>
<td style="border-right: none;"></td>
<td style="border-left: none;"></td>
<td style="border-right: none;">27:</td>
<td style="border-left: none;">T?</td>
<td></td>
</tr>
<tr>
<td>01111</td>
<td>15</td>
<td style="text-align: center;">O</td>
<td style="border-right: none;">27:</td>
<td style="border-left: none;">TO</td>
<td style="border-right: none;">28:</td>
<td style="border-left: none;">O?</td>
<td></td>
</tr>
<tr>
<td>00010</td>
<td>2</td>
<td style="text-align: center;">B</td>
<td style="border-right: none;">28:</td>
<td style="border-left: none;">OB</td>
<td style="border-right: none;">29:</td>
<td style="border-left: none;">B?</td>
<td></td>
</tr>
<tr>
<td>00101</td>
<td>5</td>
<td style="text-align: center;">E</td>
<td style="border-right: none;">29:</td>
<td style="border-left: none;">BE</td>
<td style="border-right: none;">30:</td>
<td style="border-left: none;">E?</td>
<td></td>
</tr>
<tr>
<td>01111</td>
<td>15</td>
<td style="text-align: center;">O</td>
<td style="border-right: none;">30:</td>
<td style="border-left: none;">EO</td>
<td style="border-right: none;">31:</td>
<td style="border-left: none;">O?</td>
<td></td>
</tr>
<tr>
<td>10010</td>
<td>18</td>
<td style="text-align: center;">R</td>
<td style="border-right: none;">31:</td>
<td style="border-left: none;">OR</td>
<td style="border-right: none;">32:</td>
<td style="border-left: none;">R?</td>
<td style="text-align: left;">created code 31 (last to fit in 5 bits)</td>
</tr>
<tr>
<td>001110</td>
<td>14</td>
<td style="text-align: center;">N</td>
<td style="border-right: none;">32:</td>
<td style="border-left: none;">RN</td>
<td style="border-right: none;">33:</td>
<td style="border-left: none;">N?</td>
<td style="text-align: left;">so start reading input at 6 bits</td>
</tr>
<tr>
<td>001111</td>
<td>15</td>
<td style="text-align: center;">O</td>
<td style="border-right: none;">33:</td>
<td style="border-left: none;">NO</td>
<td style="border-right: none;">34:</td>
<td style="border-left: none;">O?</td>
<td></td>
</tr>
<tr>
<td>010100</td>
<td>20</td>
<td style="text-align: center;">T</td>
<td style="border-right: none;">34:</td>
<td style="border-left: none;">OT</td>
<td style="border-right: none;">35:</td>
<td style="border-left: none;">T?</td>
<td></td>
</tr>
<tr>
<td>011011</td>
<td>27</td>
<td style="text-align: center;">TO</td>
<td style="border-right: none;">35:</td>
<td style="border-left: none;">TT</td>
<td style="border-right: none;">36:</td>
<td style="border-left: none;">TO?</td>
<td></td>
</tr>
<tr>
<td>011101</td>
<td>29</td>
<td style="text-align: center;">BE</td>
<td style="border-right: none;">36:</td>
<td style="border-left: none;">TOB</td>
<td style="border-right: none;">37:</td>
<td style="border-left: none;">BE?</td>
<td style="text-align: left;">36 = TO + 1st symbol (B) of</td>
</tr>
<tr>
<td>011111</td>
<td>31</td>
<td style="text-align: center;">OR</td>
<td style="border-right: none;">37:</td>
<td style="border-left: none;">BEO</td>
<td style="border-right: none;">38:</td>
<td style="border-left: none;">OR?</td>
<td style="text-align: left;">next coded sequence received (BE)</td>
</tr>
<tr>
<td>100100</td>
<td>36</td>
<td style="text-align: center;">TOB</td>
<td style="border-right: none;">38:</td>
<td style="border-left: none;">ORT</td>
<td style="border-right: none;">39:</td>
<td style="border-left: none;">TOB?</td>
<td></td>
</tr>
<tr>
<td>011110</td>
<td>30</td>
<td style="text-align: center;">EO</td>
<td style="border-right: none;">39:</td>
<td style="border-left: none;">TOBE</td>
<td style="border-right: none;">40:</td>
<td style="border-left: none;">EO?</td>
<td></td>
</tr>
<tr>
<td>100000</td>
<td>32</td>
<td style="text-align: center;">RN</td>
<td style="border-right: none;">40:</td>
<td style="border-left: none;">EOR</td>
<td style="border-right: none;">41:</td>
<td style="border-left: none;">RN?</td>
<td></td>
</tr>
<tr>
<td>100010</td>
<td>34</td>
<td style="text-align: center;">OT</td>
<td style="border-right: none;">41:</td>
<td style="border-left: none;">RNO</td>
<td style="border-right: none;">42:</td>
<td style="border-left: none;">OT?</td>
<td></td>
</tr>
<tr>
<td>000000</td>
<td>0</td>
<td style="text-align: center;">#</td>
<td style="border-right: none;"></td>
<td style="border-left: none;"></td>
<td style="border-right: none;"></td>
<td style="border-left: none;"></td>
<td></td>
</tr>
</table>
<p>At each stage, the decoder receives a code X; it looks X up in the table and outputs the sequence χ it codes, and it conjectures χ +&#160;? as the entry the encoder just added – because the encoder emitted X for χ precisely because χ +&#160;? was not in the table, and the encoder goes ahead and adds it. But what is the missing letter? It is the first letter in the sequence coded by the <i>next</i> code Z that the decoder receives. So the decoder looks up Z, decodes it into the sequence ω and takes the first letter z and tacks it onto the end of χ as the next dictionary entry.</p>
<p>This works as long as the codes received are in the decoder's dictionary, so that they can be decoded into sequences. What happens if the decoder receives a code Z that is not yet in its dictionary? Since the decoder is always just one code behind the encoder, Z can be in the encoder's dictionary only if the encoder <i>just</i> generated it, when emitting the previous code X for χ. Thus Z codes some ω that is χ +&#160;?, and the decoder can determine the unknown character as follows:</p>
<ol>
<li>The decoder sees X and then Z.</li>
<li>It knows X codes the sequence χ and Z codes some unknown sequence ω.</li>
<li>It knows the encoder just added Z to code χ + some unknown character,</li>
<li>and it knows that the unknown character is the first letter z of ω.</li>
<li>But the first letter of ω (= χ +&#160;?) must then also be the first letter of χ.</li>
<li>So ω must be χ + x, where <b>x is the <i>first</i> letter of χ</b>.</li>
<li>So the decoder figures out what Z codes even though it's not in the table,</li>
<li>and upon receiving Z, the decoder decodes it as χ + x, and adds χ + x to the table as the value of Z.</li>
</ol>
<p>This situation occurs whenever the encoder encounters input of the form <i>cScSc</i>, where <i>c</i> is a single character, <i>S</i> is a string and <i>cS</i> is already in the dictionary, but <i>cSc</i> is not. The encoder emits the code for <i>cS</i>, putting a new code for <i>cSc</i> into the dictionary. Next it sees <i>cSc</i> in the input (starting at the second <i>c</i> of <i>cScSc</i>) and emits the new code it just inserted. The argument above shows that whenever the decoder receives a code not in its dictionary, the situation must look like this.</p>
<p>Although input of form <i>cScSc</i> might seem unlikely, this pattern is fairly common when the input stream is characterized by significant repetition. In particular, long strings of a single character (which are common in the kinds of images LZW is often used to encode) repeatedly generate patterns of this sort.</p>
<h2><span class="editsection">[<a href="/w/index.php?title=Lempel%E2%80%93Ziv%E2%80%93Welch&amp;action=edit&amp;section=9" title="Edit section: Further coding">edit</a>]</span> <span class="mw-headline" id="Further_coding">Further coding</span></h2>
<p>The simple scheme described above focuses on the LZW algorithm itself. Many applications apply further encoding to the sequence of output symbols. Some package the coded stream as printable characters using some form of <a href="/wiki/Binary-to-text_encoding" title="Binary-to-text encoding">Binary-to-text encoding</a>; this will increase the encoded length and decrease the compression frequency. Conversely, increased compression can often be achieved with an <i>adaptive entropy encoder</i>. Such a coder estimates the probability distribution for the value of the next symbol, based on the observed frequencies of values so far. A standard entropy encoding such as <a href="/wiki/Huffman_coding" title="Huffman coding">Huffman coding</a> or <a href="/wiki/Arithmetic_coding" title="Arithmetic coding">arithmetic coding</a> then uses shorter codes for values with higher probabilities.</p>
<h2><span class="editsection">[<a href="/w/index.php?title=Lempel%E2%80%93Ziv%E2%80%93Welch&amp;action=edit&amp;section=10" title="Edit section: Uses">edit</a>]</span> <span class="mw-headline" id="Uses">Uses</span></h2>
<p>LZW compression became the first widely used universal data compression method on computers. A large <a href="/wiki/English_language" title="English language">English</a> text file can typically be compressed via LZW to about half its original size.</p>
<p>LZW was used in the public-domain program <a href="/wiki/Compress" title="Compress">compress</a>, which became a more or less standard utility in <a href="/wiki/Unix" title="Unix">Unix</a> systems circa 1986. It has since disappeared from many distributions, both because it infringed the LZW patent and because <a href="/wiki/Gzip" title="Gzip">gzip</a> produced better compression ratios using the LZ77-based <a href="/wiki/DEFLATE" title="DEFLATE">DEFLATE</a> algorithm, but as of 2008 at least FreeBSD includes both <a href="/wiki/Compress" title="Compress">compress</a> and <a href="/wiki/Uncompress" title="Uncompress" class="mw-redirect">uncompress</a> as a part of the distribution. Several other popular compression utilities also used LZW, or closely related methods.</p>
<p>LZW became very widely used when it became part of the <a href="/wiki/Graphics_Interchange_Format" title="Graphics Interchange Format">GIF</a> image format in 1987. It may also (optionally) be used in <a href="/wiki/TIFF" title="TIFF" class="mw-redirect">TIFF</a> and <a href="/wiki/PDF" title="PDF" class="mw-redirect">PDF</a> files. (Although LZW is available in <a href="/wiki/Adobe_Acrobat_Reader" title="Adobe Acrobat Reader" class="mw-redirect">Adobe Acrobat</a> software, Acrobat by default uses <a href="/wiki/DEFLATE" title="DEFLATE">DEFLATE</a> for most text and color-table-based image data in PDF files.)</p>
<h2><span class="editsection">[<a href="/w/index.php?title=Lempel%E2%80%93Ziv%E2%80%93Welch&amp;action=edit&amp;section=11" title="Edit section: Patents">edit</a>]</span> <span class="mw-headline" id="Patents">Patents</span></h2>
<p>Various <a href="/wiki/Patent" title="Patent">patents</a> have been issued in the <a href="/wiki/United_States" title="United States">United States</a> and other countries for LZW and similar algorithms. LZ78 was covered by <span><a rel="nofollow" class="external text" href="http://www.google.com/patents?vid=4464650">U.S. Patent 4,464,650</a></span> by Lempel, Ziv, Cohn, and Eastman, assigned to <a href="/wiki/Sperry_Corporation" title="Sperry Corporation">Sperry Corporation</a>, later <a href="/wiki/Unisys" title="Unisys">Unisys</a> Corporation, filed on August 10, 1981. Two US patents were issued for the LZW algorithm: <span><a rel="nofollow" class="external text" href="http://www.google.com/patents?vid=4814746">U.S. Patent 4,814,746</a></span> by <a href="/wiki/Victor_S._Miller" title="Victor S. Miller">Victor S. Miller</a> and Mark N. Wegman and assigned to <a href="/wiki/International_Business_Machines" title="International Business Machines" class="mw-redirect">IBM</a>, originally filed on June 1, 1983, and <span><a rel="nofollow" class="external text" href="http://www.google.com/patents?vid=4558302">U.S. Patent 4,558,302</a></span> by Welch, assigned to Sperry Corporation, later Unisys Corporation, filed on June 20, 1983. On June 20, 2003, this patent on the LZW algorithm expired <a rel="nofollow" class="external autonumber" href="http://www.unisys.com/about__unisys/lzw">[1]</a>. All patents on the LZW algorithm worldwide have also expired (see <a href="/wiki/Graphics_Interchange_Format#Unisys_and_LZW_patent_enforcement" title="Graphics Interchange Format">Graphics Interchange Format#Unisys and LZW patent enforcement</a>).</p>
<p>US Patent 4,558,302 received a lot of negative press after LZW compression was used in the GIF image format.<sup class="Template-Fact" style="white-space:nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed"><span title="This claim needs references to reliable sources from March 2012">citation needed</span></a></i>]</sup></p>
<h2><span class="editsection">[<a href="/w/index.php?title=Lempel%E2%80%93Ziv%E2%80%93Welch&amp;action=edit&amp;section=12" title="Edit section: Variants">edit</a>]</span> <span class="mw-headline" id="Variants">Variants</span></h2>
<ul>
<li>LZMW (1985, by V. Miller, M. Wegman)<sup id="cite_ref-2" class="reference"><a href="#cite_note-2"><span>[</span>3<span>]</span></a></sup> – Searches input for the longest string already in the dictionary (the "current" match); adds the concatenation of the previous match with the current match to the dictionary. (Dictionary entries thus grow more rapidly; but this scheme is much more complicated to implement.) Miller and Wegman also suggest deleting low frequency entries from the dictionary when the dictionary fills up.</li>
<li>LZAP (1988, by James Storer)<sup id="cite_ref-3" class="reference"><a href="#cite_note-3"><span>[</span>4<span>]</span></a></sup> – modification of LZMW: instead of adding just the concatenation of the previous match with the current match to the dictionary, add the concatenations of the previous match with each initial substring of the current match. ("AP" stands for "all prefixes".) For example, if the previous match is "wiki" and current match is "pedia", then the LZAP encoder adds 5 new sequences to the dictionary: "wikip", "wikipe", "wikiped", "wikipedi", and "wikipedia", where the LZMW encoder adds only the one sequence "wikipedia". This eliminates some of the complexity of LZMW, at the price of adding more dictionary entries.</li>
<li><a href="/wiki/LZWL" title="LZWL">LZWL</a> is a syllable-based variant of LZW.</li>
</ul>
<h2><span class="editsection">[<a href="/w/index.php?title=Lempel%E2%80%93Ziv%E2%80%93Welch&amp;action=edit&amp;section=13" title="Edit section: See also">edit</a>]</span> <span class="mw-headline" id="See_also">See also</span></h2>
<ul>
<li><a href="/wiki/LZ77_and_LZ78" title="LZ77 and LZ78">LZ77 and LZ78</a></li>
<li><a href="/wiki/Lempel-Ziv-Markov_chain_algorithm" title="Lempel-Ziv-Markov chain algorithm" class="mw-redirect">LZMA</a></li>
<li><a href="/wiki/Lempel-Ziv-Storer-Szymanski" title="Lempel-Ziv-Storer-Szymanski" class="mw-redirect">Lempel-Ziv-Storer-Szymanski</a></li>
<li><a href="/wiki/LZJB" title="LZJB">LZJB</a></li>
<li><a href="/wiki/Context_tree_weighting" title="Context tree weighting">Context tree weighting</a></li>
</ul>
<h2><span class="editsection">[<a href="/w/index.php?title=Lempel%E2%80%93Ziv%E2%80%93Welch&amp;action=edit&amp;section=14" title="Edit section: References">edit</a>]</span> <span class="mw-headline" id="References">References</span></h2>
<div class="reflist references-column-count references-column-count-2" style="-moz-column-count: 2; -webkit-column-count: 2; column-count: 2; list-style-type: decimal;">
<ol class="references">
<li id="cite_note-WelchIEEE-0"><span class="mw-cite-backlink">^ <a href="#cite_ref-WelchIEEE_0-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-WelchIEEE_0-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text">Terry Welch, <a rel="nofollow" class="external text" href="http://ieeexplore.ieee.org/xpls/abs_all.jsp?tp=&amp;arnumber=1659158&amp;isnumber=34743">"A Technique for High-Performance Data Compression"</a>, <i>IEEE Computer</i>, June 1984, p.&#160;8–19.</span></li>
<li id="cite_note-1"><span class="mw-cite-backlink"><b><a href="#cite_ref-1">^</a></b></span> <span class="reference-text">Jacob Ziv and Abraham Lempel; <a rel="nofollow" class="external text" href="http://www.cs.duke.edu/courses/spring03/cps296.5/papers/ziv_lempel_1978_variable-rate.pdf"><i>Compression of Individual Sequences Via Variable-Rate Coding</i></a>, IEEE Transactions on Information Theory, September 1978.</span></li>
<li id="cite_note-2"><span class="mw-cite-backlink"><b><a href="#cite_ref-2">^</a></b></span> <span class="reference-text">David Salomon, <i>Data Compression – The complete reference</i>, 4th ed., page 209</span></li>
<li id="cite_note-3"><span class="mw-cite-backlink"><b><a href="#cite_ref-3">^</a></b></span> <span class="reference-text">David Salomon, <i>Data Compression – The complete reference</i>, 4th ed., page 212</span></li>
</ol>
</div>
<h2><span class="editsection">[<a href="/w/index.php?title=Lempel%E2%80%93Ziv%E2%80%93Welch&amp;action=edit&amp;section=15" title="Edit section: External links">edit</a>]</span> <span class="mw-headline" id="External_links">External links</span></h2>
<ul>
<li>Welch, T.A., <a rel="nofollow" class="external text" href="http://ieeexplore.ieee.org/xpls/abs_all.jsp?tp=&amp;arnumber=1659158&amp;isnumber=34743"><i>A Technique for High-Performance Data Compression,</i></a> Computer, vol. 17, no. 6, pp.&#160;8–19, June 1984.<br />
<a rel="nofollow" class="external text" href="http://www.cs.duke.edu/courses/spring03/cps296.5/papers/welch_1984_technique_for.pdf">Alternative link</a>.</li>
<li><span><a rel="nofollow" class="external text" href="http://www.google.com/patents?vid=4558302">U.S. Patent 4,558,302</a></span>, Terry A. Welch, <i>High speed data compression and decompression apparatus and method</i></li>
<li><a rel="nofollow" class="external text" href="http://sourceforge.net/projects/sharplzw/">SharpLZW - C# open source implementation</a></li>
</ul>
<p><br /></p>
<table cellspacing="0" class="navbox" style="border-spacing:0;;">
<tr>
<td style="padding:2px;">
<table cellspacing="0" class="nowraplinks collapsible autocollapse navbox-inner" style="border-spacing:0;background:transparent;color:inherit;;">
<tr>
<th scope="col" style=";" class="navbox-title" colspan="2">
<div class="noprint plainlinks hlist navbar mini" style="">
<ul>
<li class="nv-view"><a href="/wiki/Template:Compression_methods" title="Template:Compression methods"><span title="View this template" style=";;background:none transparent;border:none;">v</span></a></li>
<li class="nv-talk"><a href="/wiki/Template_talk:Compression_methods" title="Template talk:Compression methods"><span title="Discuss this template" style=";;background:none transparent;border:none;">t</span></a></li>
<li class="nv-edit"><a class="external text" href="//en.wikipedia.org/w/index.php?title=Template:Compression_methods&amp;action=edit"><span title="Edit this template" style=";;background:none transparent;border:none;">e</span></a></li>
</ul>
</div>
<div class="" style="font-size:110%;"><a href="/wiki/Data_compression" title="Data compression">Data compression</a> methods</div>
</th>
</tr>
<tr style="height:2px;">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";;"><a href="/wiki/Information_theory" title="Information theory">Information theory</a></th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-odd hlist">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Entropy_(information_theory)" title="Entropy (information theory)">Entropy</a></li>
<li><a href="/wiki/Kolmogorov_complexity" title="Kolmogorov complexity">Complexity</a></li>
<li><a href="/wiki/Redundancy_(information_theory)" title="Redundancy (information theory)">Redundancy</a></li>
<li><a href="/wiki/Lossy_compression" title="Lossy compression">Lossy</a></li>
<li><a href="/wiki/Timeline_of_information_theory" title="Timeline of information theory">Timeline of information theory</a></li>
<li><a href="/wiki/Quantization_(signal_processing)" title="Quantization (signal processing)">Quantization</a></li>
<li><a href="/wiki/Rate_distortion_theory" title="Rate distortion theory" class="mw-redirect">Rate distortion theory</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";;"><a href="/wiki/Lossless_data_compression" title="Lossless data compression" class="mw-redirect">Lossless</a></th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-even hlist">
<div style="padding:0em 0.25em"></div>
<table cellspacing="0" class="nowraplinks navbox-subgroup" style="border-spacing:0;;;;">
<tr>
<th scope="row" class="navbox-group" style=";width:11em;;"><a href="/wiki/Entropy_encoding" title="Entropy encoding">Entropy encoding</a></th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Shannon%E2%80%93Fano_coding" title="Shannon–Fano coding">Shannon–Fano</a></li>
<li><a href="/wiki/Shannon%E2%80%93Fano%E2%80%93Elias_coding" title="Shannon–Fano–Elias coding">Shannon–Fano–Elias</a></li>
<li><a href="/wiki/Huffman_coding" title="Huffman coding">Huffman</a>
<ul>
<li><a href="/wiki/Adaptive_Huffman_coding" title="Adaptive Huffman coding">Adaptive</a></li>
<li><a href="/wiki/Canonical_Huffman_code" title="Canonical Huffman code">Canonical</a></li>
<li><a href="/wiki/Modified_Huffman_coding" title="Modified Huffman coding">Modified</a></li>
</ul>
</li>
<li><a href="/wiki/Arithmetic_coding" title="Arithmetic coding">Arithmetic</a></li>
<li><a href="/wiki/Range_encoding" title="Range encoding">Range</a></li>
<li><a href="/wiki/Golomb_coding" title="Golomb coding">Golomb</a></li>
<li><a href="/wiki/Universal_code_(data_compression)" title="Universal code (data compression)">Universal</a>
<ul>
<li><a href="/wiki/Elias_gamma_coding" title="Elias gamma coding">Gamma</a></li>
<li><a href="/wiki/Exponential-Golomb_coding" title="Exponential-Golomb coding">Exp-Golomb</a></li>
<li><a href="/wiki/Fibonacci_coding" title="Fibonacci coding">Fibonacci</a></li>
<li><a href="/wiki/Levenstein_coding" title="Levenstein coding">Levenstein</a></li>
</ul>
</li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";width:11em;;"><a href="/wiki/Dictionary_coder" title="Dictionary coder">Dictionary</a></th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Run-length_encoding" title="Run-length encoding">RLE</a></li>
<li><a href="/wiki/Byte_pair_encoding" title="Byte pair encoding">Byte pair encoding</a></li>
<li><a href="/wiki/DEFLATE" title="DEFLATE">DEFLATE</a></li>
<li><a href="/wiki/Lempel%E2%80%93Ziv" title="Lempel–Ziv" class="mw-redirect">Lempel–Ziv</a>
<ul>
<li><a href="/wiki/LZ77_and_LZ78" title="LZ77 and LZ78">LZ77/78</a></li>
<li><a href="/wiki/Lempel%E2%80%93Ziv%E2%80%93Storer%E2%80%93Szymanski" title="Lempel–Ziv–Storer–Szymanski">LZSS</a></li>
<li><strong class="selflink">LZW</strong></li>
<li><a href="/wiki/LZWL" title="LZWL">LZWL</a></li>
<li><a href="/wiki/Lempel%E2%80%93Ziv%E2%80%93Oberhumer" title="Lempel–Ziv–Oberhumer">LZO</a></li>
<li><a href="/wiki/Lempel%E2%80%93Ziv%E2%80%93Markov_chain_algorithm" title="Lempel–Ziv–Markov chain algorithm">LZMA</a></li>
<li><a href="/wiki/LZX_(algorithm)" title="LZX (algorithm)">LZX</a></li>
<li><a href="/wiki/LZRW" title="LZRW">LZRW</a></li>
<li><a href="/wiki/LZJB" title="LZJB">LZJB</a></li>
<li><a href="/wiki/Lempel%E2%80%93Ziv%E2%80%93Stac" title="Lempel–Ziv–Stac">LZS</a></li>
<li><a href="/w/index.php?title=Lempel%E2%80%93Ziv%E2%80%93Tamayo&amp;action=edit&amp;redlink=1" class="new" title="Lempel–Ziv–Tamayo (page does not exist)">LZT</a></li>
<li><a href="/w/index.php?title=Reduced_Offset_Lempel_Ziv&amp;action=edit&amp;redlink=1" class="new" title="Reduced Offset Lempel Ziv (page does not exist)">ROLZ</a></li>
</ul>
</li>
<li><a href="/wiki/Statistical_Lempel_Ziv" title="Statistical Lempel Ziv">Statistical Lempel Ziv</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";width:11em;;">Others</th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Context_tree_weighting" title="Context tree weighting">CTW</a></li>
<li><a href="/wiki/Burrows%E2%80%93Wheeler_transform" title="Burrows–Wheeler transform">BWT</a></li>
<li><a href="/wiki/Prediction_by_partial_matching" title="Prediction by partial matching">PPM</a></li>
<li><a href="/wiki/Dynamic_Markov_compression" title="Dynamic Markov compression">DMC</a></li>
<li><a href="/wiki/Delta_encoding" title="Delta encoding">Delta</a></li>
</ul>
</div>
</td>
</tr>
</table>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";;"><a href="/wiki/Audio_compression_(data)" title="Audio compression (data)" class="mw-redirect">Audio</a></th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-odd hlist">
<div style="padding:0em 0.25em"></div>
<table cellspacing="0" class="nowraplinks navbox-subgroup" style="border-spacing:0;;;;">
<tr>
<th scope="row" class="navbox-group" style=";width:11em;;"><a href="/wiki/Acoustics" title="Acoustics">Theory</a></th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Companding" title="Companding">Companding</a></li>
<li><a href="/wiki/Convolution" title="Convolution">Convolution</a></li>
<li><a href="/wiki/Dynamic_range" title="Dynamic range">Dynamic range</a></li>
<li><a href="/wiki/Latency_(audio)" title="Latency (audio)">Latency</a></li>
<li><a href="/wiki/Sampling_(signal_processing)" title="Sampling (signal processing)">Sampling</a></li>
<li><a href="/wiki/Nyquist%E2%80%93Shannon_sampling_theorem" title="Nyquist–Shannon sampling theorem">Nyquist–Shannon theorem</a></li>
<li><a href="/wiki/Sound_quality" title="Sound quality">Sound quality</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";width:11em;;"><a href="/wiki/Audio_codec" title="Audio codec">Audio codec</a> parts</th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Linear_predictive_coding" title="Linear predictive coding">LPC</a>
<ul>
<li><a href="/wiki/Log_area_ratio" title="Log area ratio">LAR</a></li>
<li><a href="/wiki/Line_spectral_pairs" title="Line spectral pairs">LSP</a></li>
</ul>
</li>
<li><a href="/wiki/Warped_linear_predictive_coding" title="Warped linear predictive coding">WLPC</a></li>
<li><a href="/wiki/Code-excited_linear_prediction" title="Code-excited linear prediction">CELP</a></li>
<li><a href="/wiki/Algebraic_Code_Excited_Linear_Prediction" title="Algebraic Code Excited Linear Prediction" class="mw-redirect">ACELP</a></li>
<li><a href="/wiki/A-law_algorithm" title="A-law algorithm">A-law</a></li>
<li><a href="/wiki/%CE%9C-law_algorithm" title="Μ-law algorithm">μ-law</a></li>
<li><a href="/wiki/Adaptive_DPCM" title="Adaptive DPCM" class="mw-redirect">ADPCM</a></li>
<li><a href="/wiki/DPCM" title="DPCM" class="mw-redirect">DPCM</a></li>
<li><a href="/wiki/Modified_discrete_cosine_transform" title="Modified discrete cosine transform">MDCT</a></li>
<li><a href="/wiki/Fourier_transform" title="Fourier transform">Fourier transform</a></li>
<li><a href="/wiki/Psychoacoustics" title="Psychoacoustics">Psychoacoustic model</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";width:11em;;">Others</th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Bit_rate" title="Bit rate">Bit rate</a>
<ul>
<li><a href="/wiki/Constant_bitrate" title="Constant bitrate">CBR</a></li>
<li><a href="/wiki/Average_bitrate" title="Average bitrate">ABR</a></li>
<li><a href="/wiki/Variable_bitrate" title="Variable bitrate">VBR</a></li>
</ul>
</li>
<li><a href="/wiki/Speech_encoding" title="Speech encoding" class="mw-redirect">Speech compression</a></li>
<li><a href="/wiki/Sub-band_coding" title="Sub-band coding">Sub-band coding</a></li>
</ul>
</div>
</td>
</tr>
</table>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";;"><a href="/wiki/Image_compression" title="Image compression">Image</a></th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-even hlist">
<div style="padding:0em 0.25em"></div>
<table cellspacing="0" class="nowraplinks navbox-subgroup" style="border-spacing:0;;;;">
<tr>
<th scope="row" class="navbox-group" style=";width:11em;;">Terms</th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Color_space" title="Color space">Color space</a></li>
<li><a href="/wiki/Pixel" title="Pixel">Pixel</a></li>
<li><a href="/wiki/Chroma_subsampling" title="Chroma subsampling">Chroma subsampling</a></li>
<li><a href="/wiki/Compression_artifact" title="Compression artifact">Compression artifact</a></li>
<li><a href="/wiki/Image_resolution" title="Image resolution">Image resolution</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";width:11em;;">Methods</th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Run-length_encoding" title="Run-length encoding">RLE</a></li>
<li><a href="/wiki/Fractal_compression" title="Fractal compression">Fractal</a></li>
<li><a href="/wiki/Wavelet_compression" title="Wavelet compression" class="mw-redirect">Wavelet</a></li>
<li><a href="/wiki/EZW" title="EZW" class="mw-redirect">EZW</a></li>
<li><a href="/wiki/Set_partitioning_in_hierarchical_trees" title="Set partitioning in hierarchical trees">SPIHT</a></li>
<li><a href="/wiki/Pyramid_(image_processing)" title="Pyramid (image processing)">LP</a></li>
<li><a href="/wiki/Discrete_cosine_transform" title="Discrete cosine transform">DCT</a></li>
<li><a href="/wiki/Chain_code" title="Chain code">Chain code</a></li>
<li><a href="/wiki/Karhunen-Lo%C3%A8ve_transform" title="Karhunen-Loève transform" class="mw-redirect">KLT</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";width:11em;;">Others</th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Standard_test_image" title="Standard test image">Test images</a></li>
<li><a href="/wiki/Peak_signal-to-noise_ratio" title="Peak signal-to-noise ratio">PSNR quality measure</a></li>
<li><a href="/wiki/Quantization_(image_processing)" title="Quantization (image processing)">Quantization</a></li>
</ul>
</div>
</td>
</tr>
</table>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";;"><a href="/wiki/Video_compression" title="Video compression" class="mw-redirect">Video</a></th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-odd hlist">
<div style="padding:0em 0.25em"></div>
<table cellspacing="0" class="nowraplinks navbox-subgroup" style="border-spacing:0;;;;">
<tr>
<th scope="row" class="navbox-group" style=";width:11em;;">Terms</th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Video#Characteristics_of_video_streams" title="Video">Video characteristics</a></li>
<li><a href="/wiki/Film_frame" title="Film frame">Frame</a></li>
<li><a href="/wiki/Frame_rate" title="Frame rate">Frame rate</a></li>
<li><a href="/wiki/Interlaced_video" title="Interlaced video">Interlace</a></li>
<li><a href="/wiki/Video_compression_picture_types" title="Video compression picture types">Frame types</a></li>
<li><a href="/wiki/Video_quality" title="Video quality">Video quality</a></li>
<li><a href="/wiki/Video_resolution" title="Video resolution" class="mw-redirect">Video resolution</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";width:11em;;"><a href="/wiki/Video_codec" title="Video codec">Video codec parts</a></th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Motion_compensation" title="Motion compensation">Motion compensation</a></li>
<li><a href="/wiki/Discrete_cosine_transform" title="Discrete cosine transform">DCT</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";width:11em;;">Others</th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Video_codec" title="Video codec">Video codecs</a></li>
<li><a href="/wiki/Bit_rate" title="Bit rate">Bit rate</a>
<ul>
<li><a href="/wiki/Constant_bitrate" title="Constant bitrate">CBR</a></li>
<li><a href="/wiki/Average_bitrate" title="Average bitrate">ABR</a></li>
<li><a href="/wiki/Variable_bitrate" title="Variable bitrate">VBR</a></li>
</ul>
</li>
</ul>
</div>
</td>
</tr>
</table>
</td>
</tr>
<tr style="height:2px;">
<td></td>
</tr>
<tr>
<td class="navbox-abovebelow" style=";" colspan="2">
<div>See <a href="/wiki/Template:Compression_formats" title="Template:Compression formats">Compression formats</a> for formats and <a href="/wiki/Template:Compression_software" title="Template:Compression software">Compression software</a> for codecs</div>
</td>
</tr>
</table>
</td>
</tr>
</table>


<!-- 
NewPP limit report
Preprocessor node count: 2017/1000000
Post-expand include size: 52657/2048000 bytes
Template argument size: 32952/2048000 bytes
Highest expansion depth: 21/40
Expensive parser function count: 1/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:75854-0!*!0!!en!*!* and timestamp 20120918172155 -->
</div>				<!-- /bodycontent -->
								<!-- printfooter -->
				<div class="printfooter">
				Retrieved from "<a href="http://en.wikipedia.org/w/index.php?title=Lempel–Ziv–Welch&amp;oldid=506664890">http://en.wikipedia.org/w/index.php?title=Lempel–Ziv–Welch&amp;oldid=506664890</a>"				</div>
				<!-- /printfooter -->
												<!-- catlinks -->
				<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="/wiki/Category:Lossless_compression_algorithms" title="Category:Lossless compression algorithms">Lossless compression algorithms</a></li></ul></div><div id="mw-hidden-catlinks" class="mw-hidden-catlinks mw-hidden-cats-hidden">Hidden categories: <ul><li><a href="/wiki/Category:All_articles_with_unsourced_statements" title="Category:All articles with unsourced statements">All articles with unsourced statements</a></li><li><a href="/wiki/Category:Articles_with_unsourced_statements_from_March_2012" title="Category:Articles with unsourced statements from March 2012">Articles with unsourced statements from March 2012</a></li><li><a href="/wiki/Category:Articles_with_example_pseudocode" title="Category:Articles with example pseudocode">Articles with example pseudocode</a></li></ul></div></div>				<!-- /catlinks -->
												<div class="visualClear"></div>
				<!-- debughtml -->
								<!-- /debughtml -->
			</div>
			<!-- /bodyContent -->
		</div>
		<!-- /content -->
		<!-- header -->
		<div id="mw-head" class="noprint">
			
<!-- 0 -->
<div id="p-personal" class="">
	<h5>Personal tools</h5>
	<ul>
		<li id="pt-createaccount"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=LZW&amp;type=signup">Create account</a></li>
		<li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=LZW" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in</a></li>
	</ul>
</div>

<!-- /0 -->
			<div id="left-navigation">
				
<!-- 0 -->
<div id="p-namespaces" class="vectorTabs">
	<h5>Namespaces</h5>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="/wiki/Lempel%E2%80%93Ziv%E2%80%93Welch"  title="View the content page [c]" accesskey="c">Article</a></span></li>
					<li  id="ca-talk"><span><a href="/wiki/Talk:Lempel%E2%80%93Ziv%E2%80%93Welch"  title="Discussion about the content page [t]" accesskey="t">Talk</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-variants" class="vectorMenu emptyPortlet">
	<h4>
		</h4>
	<h5><span>Variants</span><a href="#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->
			</div>
			<div id="right-navigation">
				
<!-- 0 -->
<div id="p-views" class="vectorTabs">
	<h5>Views</h5>
	<ul>
					<li id="ca-view" class="selected"><span><a href="/wiki/Lempel%E2%80%93Ziv%E2%80%93Welch" >Read</a></span></li>
					<li id="ca-edit"><span><a href="/w/index.php?title=Lempel%E2%80%93Ziv%E2%80%93Welch&amp;action=edit"  title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="/w/index.php?title=Lempel%E2%80%93Ziv%E2%80%93Welch&amp;action=history"  title="Past versions of this page [h]" accesskey="h">View history</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-cactions" class="vectorMenu emptyPortlet">
	<h5><span>Actions</span><a href="#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->

<!-- 2 -->
<div id="p-search">
	<h5><label for="searchInput">Search</label></h5>
	<form action="/w/index.php" id="searchform">
				<div id="simpleSearch">
						<input name="search" title="Search Wikipedia [f]" accesskey="f" id="searchInput" />						<button name="button" title="Search Wikipedia for this text" id="searchButton" width="12" height="13"><img src="//bits.wikimedia.org/static-1.20wmf11/skins/vector/images/search-ltr.png?303-4" alt="Search" /></button>								<input type='hidden' name="title" value="Special:Search"/>
		</div>
	</form>
</div>

<!-- /2 -->
			</div>
		</div>
		<!-- /header -->
		<!-- panel -->
			<div id="mw-panel" class="noprint">
				<!-- logo -->
					<div id="p-logo"><a style="background-image: url(//upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page"  title="Visit the main page"></a></div>
				<!-- /logo -->
				
<!-- navigation -->
<div class="portal" id='p-navigation'>
	<h5>Navigation</h5>
	<div class="body">
		<ul>
			<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
			<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
			<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content – the best of Wikipedia">Featured content</a></li>
			<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
			<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			<li id="n-sitesupport"><a href="//donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=20120717SB001&amp;uselang=en" title="Support us">Donate to Wikipedia</a></li>
		</ul>
	</div>
</div>

<!-- /navigation -->

<!-- SEARCH -->

<!-- /SEARCH -->

<!-- interaction -->
<div class="portal" id='p-interaction'>
	<h5>Interaction</h5>
	<div class="body">
		<ul>
			<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
			<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
			<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
			<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
		</ul>
	</div>
</div>

<!-- /interaction -->

<!-- TOOLBOX -->
<div class="portal" id='p-tb'>
	<h5>Toolbox</h5>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Lempel%E2%80%93Ziv%E2%80%93Welch" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Lempel%E2%80%93Ziv%E2%80%93Welch" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-upload"><a href="/wiki/Wikipedia:Upload" title="Upload files [u]" accesskey="u">Upload file</a></li>
			<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li id="t-permalink"><a href="/w/index.php?title=Lempel%E2%80%93Ziv%E2%80%93Welch&amp;oldid=506664890" title="Permanent link to this revision of the page">Permanent link</a></li>
<li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Lempel%E2%80%93Ziv%E2%80%93Welch&amp;id=506664890" title="Information on how to cite this page">Cite this page</a></li>		</ul>
	</div>
</div>

<!-- /TOOLBOX -->

<!-- coll-print_export -->
<div class="portal" id='p-coll-print_export'>
	<h5>Print/export</h5>
	<div class="body">
		<ul id="collectionPortletList"><li id="coll-create_a_book"><a href="/w/index.php?title=Special:Book&amp;bookcmd=book_creator&amp;referer=Lempel%E2%80%93Ziv%E2%80%93Welch" title="Create a book or page collection" rel="nofollow">Create a book</a></li><li id="coll-download-as-rl"><a href="/w/index.php?title=Special:Book&amp;bookcmd=render_article&amp;arttitle=Lempel%E2%80%93Ziv%E2%80%93Welch&amp;oldid=506664890&amp;writer=rl" title="Download a PDF version of this wiki page" rel="nofollow">Download as PDF</a></li><li id="t-print"><a href="/w/index.php?title=Lempel%E2%80%93Ziv%E2%80%93Welch&amp;printable=yes" title="Printable version of this page [p]" accesskey="p">Printable version</a></li></ul>	</div>
</div>

<!-- /coll-print_export -->

<!-- LANGUAGES -->
<div class="portal" id='p-lang'>
	<h5>Languages</h5>
	<div class="body">
		<ul>
			<li class="interwiki-ar"><a href="//ar.wikipedia.org/wiki/%D8%A5%D9%84_%D8%B2%D8%AF_%D8%AF%D8%A7%D8%A8%D9%84%D9%8A%D9%88" title="إل زد دابليو" lang="ar" hreflang="ar">العربية</a></li>
			<li class="interwiki-ca"><a href="//ca.wikipedia.org/wiki/LZW" title="LZW" lang="ca" hreflang="ca">Català</a></li>
			<li class="interwiki-cs"><a href="//cs.wikipedia.org/wiki/LZW84" title="LZW84" lang="cs" hreflang="cs">Česky</a></li>
			<li class="interwiki-de"><a href="//de.wikipedia.org/wiki/Lempel-Ziv-Welch-Algorithmus" title="Lempel-Ziv-Welch-Algorithmus" lang="de" hreflang="de">Deutsch</a></li>
			<li class="interwiki-et"><a href="//et.wikipedia.org/wiki/Lempel-Ziv-Welch" title="Lempel-Ziv-Welch" lang="et" hreflang="et">Eesti</a></li>
			<li class="interwiki-es"><a href="//es.wikipedia.org/wiki/LZW" title="LZW" lang="es" hreflang="es">Español</a></li>
			<li class="interwiki-fa"><a href="//fa.wikipedia.org/wiki/%D8%A7%D9%84_%D8%B2%D8%AF_%D8%AF%D8%A7%D8%A8%D9%84%DB%8C%D9%88" title="ال زد دابلیو" lang="fa" hreflang="fa">فارسی</a></li>
			<li class="interwiki-fr"><a href="//fr.wikipedia.org/wiki/Lempel-Ziv-Welch" title="Lempel-Ziv-Welch" lang="fr" hreflang="fr">Français</a></li>
			<li class="interwiki-ko"><a href="//ko.wikipedia.org/wiki/LZW" title="LZW" lang="ko" hreflang="ko">한국어</a></li>
			<li class="interwiki-it"><a href="//it.wikipedia.org/wiki/Lempel-Ziv-Welch" title="Lempel-Ziv-Welch" lang="it" hreflang="it">Italiano</a></li>
			<li class="interwiki-he"><a href="//he.wikipedia.org/wiki/%D7%90%D7%9C%D7%92%D7%95%D7%A8%D7%99%D7%AA%D7%9D_%D7%9C%D7%9E%D7%A4%D7%9C-%D7%96%D7%99%D7%95" title="אלגוריתם למפל-זיו" lang="he" hreflang="he">עברית</a></li>
			<li class="interwiki-hu"><a href="//hu.wikipedia.org/wiki/LZW" title="LZW" lang="hu" hreflang="hu">Magyar</a></li>
			<li class="interwiki-nl"><a href="//nl.wikipedia.org/wiki/Lempel_Ziv_Welch" title="Lempel Ziv Welch" lang="nl" hreflang="nl">Nederlands</a></li>
			<li class="interwiki-ja"><a href="//ja.wikipedia.org/wiki/LZW" title="LZW" lang="ja" hreflang="ja">日本語</a></li>
			<li class="interwiki-pl"><a href="//pl.wikipedia.org/wiki/LZW" title="LZW" lang="pl" hreflang="pl">Polski</a></li>
			<li class="interwiki-pt"><a href="//pt.wikipedia.org/wiki/LZW" title="LZW" lang="pt" hreflang="pt">Português</a></li>
			<li class="interwiki-ru"><a href="//ru.wikipedia.org/wiki/%D0%90%D0%BB%D0%B3%D0%BE%D1%80%D0%B8%D1%82%D0%BC_%D0%9B%D0%B5%D0%BC%D0%BF%D0%B5%D0%BB%D1%8F_%E2%80%94_%D0%97%D0%B8%D0%B2%D0%B0_%E2%80%94_%D0%92%D0%B5%D0%BB%D1%87%D0%B0" title="Алгоритм Лемпеля — Зива — Велча" lang="ru" hreflang="ru">Русский</a></li>
			<li class="interwiki-sv"><a href="//sv.wikipedia.org/wiki/Lempel-Ziv-Welch" title="Lempel-Ziv-Welch" lang="sv" hreflang="sv">Svenska</a></li>
			<li class="interwiki-vi"><a href="//vi.wikipedia.org/wiki/LZW" title="LZW" lang="vi" hreflang="vi">Tiếng Việt</a></li>
			<li class="interwiki-zh"><a href="//zh.wikipedia.org/wiki/LZW" title="LZW" lang="zh" hreflang="zh">中文</a></li>
		</ul>
	</div>
</div>

<!-- /LANGUAGES -->
			</div>
		<!-- /panel -->
		<!-- footer -->
		<div id="footer">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 10 August 2012 at 02:51.<br /></li>
											<li id="footer-info-copyright">Text is available under the <a rel="license" href="//en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License">Creative Commons Attribution-ShareAlike License</a><a rel="license" href="//creativecommons.org/licenses/by-sa/3.0/" style="display:none;"></a>;
additional terms may apply.
See <a href="//wikimediafoundation.org/wiki/Terms_of_use">Terms of use</a> for details.<br/>
Wikipedia&reg; is a registered trademark of the <a href="//www.wikimediafoundation.org/">Wikimedia Foundation, Inc.</a>, a non-profit organization.<br /></li><li class="noprint"><a class='internal' href="//en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact us</a></li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="//wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
											<li id="footer-places-disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
											<li id="footer-places-mobileview"><a href="https://en.m.wikipedia.org/w/index.php?title=LZW&amp;mobileaction=toggle_view_mobile" class="noprint">Mobile view</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
					<li id="footer-copyrightico">
						<a href="//wikimediafoundation.org/"><img src="//bits.wikimedia.org/images/wikimedia-button.png" width="88" height="31" alt="Wikimedia Foundation"/></a>
					</li>
					<li id="footer-poweredbyico">
						<a href="//www.mediawiki.org/"><img src="//bits.wikimedia.org/static-1.20wmf11/skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31" /></a>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>
		<!-- /footer -->
		<script>if(window.mw){
mw.loader.state({"site":"loading","user":"ready","user.groups":"ready"});
}</script>
<script src="//bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=skins.vector&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
mw.loader.load(["mediawiki.user","mediawiki.page.ready","mediawiki.legacy.mwsuggest","ext.gadget.teahouse","ext.gadget.ReferenceTooltips","ext.vector.collapsibleNav","ext.vector.collapsibleTabs","ext.vector.editWarning","ext.vector.simpleSearch","ext.UserBuckets","ext.articleFeedback.startup","ext.articleFeedbackv5.startup","ext.markAsHelpful","ext.Experiments.lib","ext.Experiments.experiments"], null, true);
}</script>
<script src="/w/index.php?title=MediaWiki:Gadget-ReferenceTooltips.js&amp;action=raw&amp;ctype=text/javascript&amp;508635914"></script>
<script src="/w/index.php?title=MediaWiki:Gadget-DRN-wizard-loader.js&amp;action=raw&amp;ctype=text/javascript&amp;504341206"></script>
<script src="//bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=vector&amp;*"></script>
<!-- Served by srv270 in 0.145 secs. -->
	</body>
</html>
